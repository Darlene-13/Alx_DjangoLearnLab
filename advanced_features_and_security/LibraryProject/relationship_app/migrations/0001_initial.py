# Generated by Django 5.2.5 on 2025-09-10 11:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Enter the author's name", max_length=100)),
                ('birth_date', models.DateField(help_text="Enter the author's birth date")),
            ],
            options={
                'verbose_name': 'Author',
                'verbose_name_plural': 'Authors',
                'db_table': 'relationship_app_author',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter the book title', max_length=200)),
                ('publication_year', models.IntegerField(help_text='Enter the publication year')),
                ('author', models.ForeignKey(help_text='Select the author of the book', on_delete=django.db.models.deletion.CASCADE, related_name='books', to='relationship_app.author')),
            ],
            options={
                'verbose_name': 'Book',
                'verbose_name_plural': 'Books',
                'db_table': 'relationship_app_book',
                'ordering': ['title'],
                'permissions': [('can_add_book', 'Can add book'), ('can_change_book', 'Can change book'), ('can_delete_book', 'Can delete book'), ('can_view_book', 'Can view book')],
            },
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the library name', max_length=200)),
                ('books', models.ManyToManyField(help_text='Select books available in the library', related_name='libraries', to='relationship_app.book')),
            ],
            options={
                'verbose_name': 'Library',
                'verbose_name_plural': 'Libraries',
                'db_table': 'relationship_app_library',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Librarian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Enter the librarian's name", max_length=100)),
                ('library', models.OneToOneField(help_text='Select the library the librarian works at', on_delete=django.db.models.deletion.CASCADE, related_name='librarian', to='relationship_app.library')),
            ],
            options={
                'verbose_name': 'Librarian',
                'verbose_name_plural': 'Librarians',
                'db_table': 'relationship_app_librarian',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('member', 'Member'), ('librarian', 'Librarian')], default='member', help_text='Select the user role', max_length=10)),
                ('user', models.OneToOneField(help_text='Link to the custom user profile', on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'db_table': 'relationship_app_userprofile',
                'ordering': ['user__username'],
            },
        ),
    ]
